# Version: 2.2.1
# Date: 2025-08-12
# Changes:
#   - Fixed field label interpretation logic from v2.2.0
#   - Clearer step-by-step instructions to prevent field confusion
#   - Maintained universal language support
#   - Added explicit validation steps

Extract personal identification data from the provided JSON document using clear field label recognition. Follow these detailed guidelines:

Show me your reasoning in numbered steps (how you found field labels, what text you extracted after each label, how you mapped labels to JSON fields, etc.).
Then output the final JSON with all extracted information.

# Clear Field Label Extraction Requirements

1. Document Processing:
   - Input is a JSON with document_number, document_type, category, text, and path
   - Documents may be in ANY language: Spanish, Portuguese, English, Italian, French, German, Dutch, Polish, etc.
   - Use clear field label detection - read labels and their following text carefully
   - Preserve original language terms in personal names with proper accents
   - Translate document types to their Spanish equivalents

2. Document Validation:
   - Check that the document is an official identification document
   - If the document doesn't correspond to an official identification document:
     * Fill only the fields you can identify with confidence
     * Add a message: "Necesita revisión manual, documento no corresponde a documento oficial de identificación"
   - Look for official seals, headers, or other indicators of government issuance

3. **CLEAR NAME EXTRACTION PROCESS:**

   **STEP 1: Find Field Labels**
   Scan the document for these field labels (look for the colon ":" after each):
   
   **Surname/Family Name Labels:**
   - Spanish: "APELLIDOS:", "PRIMER APELLIDO:", "SEGUNDO APELLIDO:", "APELLIDO PATERNO:", "APELLIDO MATERNO:"
   - Portuguese: "SOBRENOME:", "APELIDOS:", "PRIMEIRO SOBRENOME:", "SEGUNDO SOBRENOME:"
   - English: "SURNAME:", "FAMILY NAME:", "LAST NAME:"
   - French: "NOM:", "NOM DE FAMILLE:"
   - Italian: "COGNOME:"
   - German: "NACHNAME:", "FAMILIENNAME:"

   **Given Name/First Name Labels:**  
   - Spanish: "NOMBRES:", "NOMBRE:", "PRENOMBRE:", "PRIMER NOMBRE:", "SEGUNDO NOMBRE:"
   - Portuguese: "NOME:", "NOMES:", "PRENOME:", "PRIMEIRO NOME:"
   - English: "GIVEN NAME:", "GIVEN NAMES:", "FIRST NAME:", "FORENAME:"
   - French: "PRÉNOM:", "PRÉNOMS:"
   - Italian: "NOME:", "NOMI:"
   - German: "VORNAME:", "VORNAMEN:"

   **STEP 2: Extract Text Following Each Label**
   For each label found:
   1. Locate the label in the document text (e.g., "APELLIDOS:")
   2. Extract the text that comes immediately AFTER the colon
   3. Stop extracting when you reach the next field label or line break

   **STEP 3: Map to Correct JSON Fields**
   - Text following surname/family name labels → lastName
   - Text following given name/first name labels → firstName
   - If multiple surname fields exist → combine with spaces → lastName
   - If multiple given name fields exist → combine with spaces → firstName

   **CRITICAL EXAMPLES:**

   ```
   Document contains: "APELLIDOS: HERNANDEZ RAMIREZ NOMBRES: LUIS DARIO"
   Correct mapping:
   - Found label "APELLIDOS:" with following text "HERNANDEZ RAMIREZ" → lastName: "HERNANDEZ RAMIREZ" 
   - Found label "NOMBRES:" with following text "LUIS DARIO" → firstName: "LUIS DARIO"
   ```

   ```
   Document contains: "PRIMER APELLIDO: GARCIA SEGUNDO APELLIDO: LOPEZ NOMBRES: CARLOS ALBERTO"
   Correct mapping:
   - Found labels "PRIMER APELLIDO:" + "SEGUNDO APELLIDO:" → combine → lastName: "GARCIA LOPEZ"
   - Found label "NOMBRES:" with following text "CARLOS ALBERTO" → firstName: "CARLOS ALBERTO"
   ```

4. Country Field Extraction:
   - Extract identification number exactly as formatted in the document
   - Determine both fields carefully:
     * country_issuer: the country that issued the document
     * nationality: the country where the person was born (from place of birth field)

5. **MANDATORY VALIDATION PROCESS:**
   After extraction, verify your work:

   a) **Label-Text Verification:**
   - Check: Did text following surname labels go to lastName?
   - Check: Did text following given name labels go to firstName?
   - Check: Are the field mappings logically correct?

   b) **Common Sense Check:**
   - Does firstName contain typical given names?
   - Does lastName contain typical family names?
   - If something seems wrong, re-read the document and correct

6. Step-by-Step Extraction Process:
   1. Scan document text for ALL field labels
   2. Extract text following each field label
   3. Identify which labels are surname-related vs given name-related
   4. Map extracted text to correct JSON fields (lastName vs firstName)
   5. Combine multi-field surnames or given names if applicable
   6. Validate extraction against label meanings
   7. Apply confidence scoring based on label detection clarity
   8. Generate final JSON with clear reasoning

7. Confidence Assessment:
   - Evaluate field label detection and text extraction clarity:
     * 95-100: Clear field labels found, text extracted successfully
     * 85-94: Field labels found but some text extraction ambiguity
     * 70-84: Partial field detection, some inference required
     * Below 70: Poor field detection, requires manual review
   - ALWAYS include scores in final output as a separate "confidenceScores" object

# Required Output Format
```json
{
  "path": "$pdf_path",
  "result": {
    "firstName": "",
    "lastName": "",
    "country_issuer": "",
    "nationality": "",
    "identificationType": "",
    "identificationNumber": "",
    "message": ""
  },
  "confidenceScores": {
    "firstName": 95,
    "lastName": 90,
    "country_issuer": 85,
    "nationality": 80,
    "identificationType": 90,
    "identificationNumber": 100
  },
  "document_type": "$document_type",
  "document_number": "$document_number",
  "category": "$category"
}
```

Remember to provide detailed reasoning about:
1. Which field labels you found in the document text
2. What text you extracted following each label  
3. How you mapped each label's text to firstName vs lastName
4. Any multi-field combinations you performed
5. Validation checks to ensure correct field mapping
6. Why you assigned specific confidence scores

Only return the data collected in the required JSON format after showing your clear step-by-step reasoning.